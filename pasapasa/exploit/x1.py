import paramiko
from ftplib import FTP
import mysql.connector

def connect_ssh(ip, port, user, passw):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        client.connect(ip, port=port, username=user, password=passw)
        stdin, stdout, stderr = client.exec_command('tail -n 5 /tmp/flag.txt')
        content = stdout.read().decode().strip()
        client.close()
        return content
    except (paramiko.AuthenticationException, paramiko.SSHException):
        print ("Error in connection")
        return None
    
def connect_ftp(ip, port, username, password):
    file_path = "flags.txt"
    print(ip, port, username,password)
    ftp = FTP()
    ftp.connect(ip, port)
    ftp.login(username, password)
    flags = []
    ftp.retrlines(f'RETR {file_path}', flags.append)
    ftp.quit()
    return '\n'.join(flags)


def connect_mariadb(ip):
    connection = mysql.connector.connect(
        host=ip,
        port=3306,
        user='pNce',
        password='ht3Zklyy',
        database='db'
    )
    if connection.is_connected():
        cursor = connection.cursor()
        cursor.execute("SELECT flag FROM flags ORDER BY id DESC LIMIT 5")
        rows = cursor.fetchall()
        cursor.close()
        connection.close()
        return rows

def connect_ssh_submission(ip, user, content):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    rsa_key = paramiko.RSAKey.from_private_key_file(f'/home/isard/.ssh/id_rsa')
    try:
        client.connect(ip, username = username, pkey=rsa_key)
        stdin, stdout, stderr = client.exec_command('mkdir -p /root && echo "{}" > /root/xxx.flag'.format(content))
        # SSH connection cleanup
        client.close()
    except (paramiko.AuthenticationException, paramiko.SSHException) as e:
        print("Error: ", e)
# Example usage:
p_ssh = 8822
u_ssh = 'shaktale'
ps_ssh = 'fortrash'
p_ftp = 21
u_ftp = 'VgMY'
ps_ftp = 'B5yYTXF3'
team_count = 2
ip_mask1 = '10.0.%d.1'
ip_mask101 = '10.0.%d.101'
while True:
    for team_number in range(1, team_count+1):
        ip1 = ip_mask1 % team_number
        ip101 = ip_mask101 % team_number
        ######SSH
        Ã§content_ssh = connect_ssh(ip101, p_ssh, u_ssh, ps_ssh)
        content_ssh = None
        if content_ssh is None:
            print("SSH - Team", team_number, " NOT successfully connected and authenticated.")
        else:
            print("SSH - Team: ", team_number, "\nContent: ", content_ssh)
            #connect_ssh_submission ('{ip1}','root', content_ssh)

        ######FTP
        #flags = connect_ftp(ip101, p_ftp, u_ftp, ps_ftp)
        flags = None
        if flags:
            print("FTP - Team: ", team_number, "\nContent: ", flags)
        else:
            print("FTP - Team", team_number, " NOT successfully connected and authenticated.")

        ######MARIADB
        rows = connect_mariadb(ip101)
        if rows:
            print("MARIADB - Team: ", team_number, "\nContent: ", rows)
            #for row in rows:
            #    print(row)
        else:
            print("MARIADB - Team", team_number, " NOT successfully connected and authenticated.")


        

        

    